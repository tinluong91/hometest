module.exports = {
    env: {
        node: true,
    },
    extends: [
        'plugin:@typescript-eslint/recommended',
        'plugin:@typescript-eslint/recommended-requiring-type-checking',
        'plugin:prettier/recommended',
        'eslint:recommended',
    ],
    parserOptions: {
        parser: '@typescript-eslint/parser',
        project: './tsconfig.eslint.json',
        sourceType: 'module',
    },
    plugins: ['@typescript-eslint', 'import', 'jsdoc', 'unicorn'],
    rules: {
        '@typescript-eslint/array-type': [
            'error',
            {
                default: 'array-simple',
            },
        ],
        '@typescript-eslint/ban-ts-ignore': 'off',
        '@typescript-eslint/ban-types': [
            'error',
            {
                types: {
                    Object: {
                        message:
                            'Avoid using the `Object` type. Did you mean `object`?',
                    },
                    Function: {
                        message:
                            'Avoid using the `Function` type. Prefer a specific function type, like `() => void`.',
                    },
                    Boolean: {
                        message:
                            'Avoid using the `Boolean` type. Did you mean `boolean`?',
                    },
                    Number: {
                        message:
                            'Avoid using the `Number` type. Did you mean `number`?',
                    },
                    String: {
                        message:
                            'Avoid using the `String` type. Did you mean `string`?',
                    },
                    Symbol: {
                        message:
                            'Avoid using the `Symbol` type. Did you mean `symbol`?',
                    },
                },
            },
        ],
        '@typescript-eslint/class-name-casing': 'off',
        '@typescript-eslint/consistent-type-definitions': 'error',
        '@typescript-eslint/explicit-member-accessibility': [
            'error',
            {
                accessibility: 'explicit',
            },
        ],
        '@typescript-eslint/indent': 'off',
        '@typescript-eslint/member-delimiter-style': [
            'off',
            {
                multiline: {
                    delimiter: 'none',
                    requireLast: true,
                },
                singleline: {
                    delimiter: 'semi',
                    requireLast: false,
                },
            },
        ],
        '@typescript-eslint/member-ordering': 'error',
        '@typescript-eslint/no-explicit-any': 'off',
        '@typescript-eslint/no-floating-promises': 'error',
        '@typescript-eslint/no-parameter-properties': 'off',
        '@typescript-eslint/no-redeclare': ['error'],
        '@typescript-eslint/no-use-before-define': 'off',
        '@typescript-eslint/no-var-requires': 'off',
        '@typescript-eslint/prefer-for-of': 'error',
        '@typescript-eslint/prefer-function-type': 'error',
        '@typescript-eslint/promise-function-async': 'error',
        '@typescript-eslint/quotes': 'off',
        '@typescript-eslint/semi': ['off', null],
        // '@typescript-eslint/strict-boolean-expressions': 'error',
        '@typescript-eslint/triple-slash-reference': [
            'error',
            {
                path: 'always',
                types: 'prefer-import',
                lib: 'always',
            },
        ],
        '@typescript-eslint/type-annotation-spacing': 'off',
        '@typescript-eslint/unified-signatures': 'off',
        'arrow-body-style': 'error',
        'arrow-parens': 'off',
        'brace-style': ['error', '1tbs'],
        camelcase: 'off',
        'class-methods-use-this': 'error',
        'comma-dangle': ['error', 'always-multiline'],
        complexity: 'error',
        'constructor-super': 'error',
        curly: 'off',
        'dot-notation': 'error',
        'eol-last': 'error',
        eqeqeq: ['error', 'always', { null: 'ignore' }],
        'guard-for-in': 'error',
        'id-match': 'error',
        'import/no-extraneous-dependencies': 'error',
        'import/order': [
            'error',
            {
                groups: [
                    'builtin',
                    'external',
                    'index',
                    'sibling',
                    'parent',
                    'internal',
                    'object',
                    'type',
                ],
                'newlines-between': 'always',
            },
        ],
        'jsdoc/check-alignment': 'error',
        'jsdoc/check-indentation': 'error',
        'jsdoc/newline-after-description': 'off',
        'jsdoc/no-types': 'error',
        'max-classes-per-file': ['error', 1],
        'max-len': 'off',
        'new-parens': 'error',
        'no-bitwise': 'error',
        'no-caller': 'error',
        'no-cond-assign': 'error',
        'no-console': 'off',
        'no-debugger': 'error',
        'no-duplicate-case': 'error',
        'no-empty': 'error',
        'no-eval': 'error',
        'no-fallthrough': 'off',
        'no-invalid-this': 'off',
        'no-irregular-whitespace': 'error',
        'no-magic-numbers': 'off',
        'no-multiple-empty-lines': [
            'error',
            {
                max: 2,
            },
        ],
        'no-new-wrappers': 'error',
        'no-redeclare': 'off',
        'no-return-await': 'error',
        'no-sequences': 'error',
        'no-shadow': [
            'error',
            {
                hoist: 'all',
            },
        ],
        'no-sparse-arrays': 'error',
        'no-template-curly-in-string': 'error',
        'no-throw-literal': 'error',
        'no-trailing-spaces': 'error',
        'no-undef-init': 'error',
        'no-underscore-dangle': [
            'error',
            { allow: ['_id'], allowAfterThis: true },
        ],
        'no-unsafe-finally': 'error',
        'no-unused-expressions': 'error',
        'no-unused-labels': 'error',
        'object-shorthand': ['error', 'never'],
        'one-var': ['error', 'never'],
        'prefer-arrow/prefer-arrow-functions': 'off',
        'prefer-object-spread': 'error',
        'prefer-template': 'error',
        'quote-props': 'off',
        radix: 'error',
        'spaced-comment': [
            'error',
            'always',
            {
                markers: ['/'],
            },
        ],
        'use-isnan': 'error',
        'valid-typeof': 'off',
        'prettier/prettier': ['error'],
        'lines-around-comment': [0],
        'no-confusing-arrow': [0],
        'no-mixed-operators': [0],
        'no-tabs': [0],
        'no-unexpected-multiline': [0],
        'prefer-arrow-callback': [0],
        quotes: [0],
        'array-bracket-newline': ['off'],
        'array-bracket-spacing': ['off'],
        'array-element-newline': ['off'],
        'arrow-spacing': ['off'],
        'block-spacing': ['off'],
        'comma-spacing': ['off'],
        'comma-style': ['off'],
        'computed-property-spacing': ['off'],
        'dot-location': ['off'],
        'func-call-spacing': ['off'],
        'function-call-argument-newline': ['off'],
        'function-paren-newline': ['off'],
        'generator-star': ['off'],
        'generator-star-spacing': ['off'],
        'implicit-arrow-linebreak': ['off'],
        indent: ['off'],
        'jsx-quotes': ['off'],
        'key-spacing': ['off'],
        'keyword-spacing': ['off'],
        'linebreak-style': ['off'],
        'multiline-ternary': ['off'],
        'newline-per-chained-call': ['off'],
        'no-arrow-condition': ['off'],
        'no-comma-dangle': ['off'],
        'no-extra-parens': ['off'],
        'no-extra-semi': ['off'],
        'no-floating-decimal': ['off'],
        'no-mixed-spaces-and-tabs': ['off'],
        'no-multi-spaces': ['off'],
        'no-reserved-keys': ['off'],
        'no-space-before-semi': ['off'],
        'no-whitespace-before-property': ['off'],
        'no-wrap-func': ['off'],
        'nonblock-statement-body-position': ['off'],
        'object-curly-newline': ['off'],
        'object-curly-spacing': ['off'],
        'object-property-newline': ['off'],
        'one-var-declaration-per-line': ['off'],
        'operator-linebreak': ['off'],
        'padded-blocks': ['off'],
        'rest-spread-spacing': ['off'],
        semi: ['off'],
        'semi-spacing': ['off'],
        'semi-style': ['off'],
        'space-after-function-name': ['off'],
        'space-after-keywords': ['off'],
        'space-before-blocks': ['off'],
        'space-before-function-parentheses': ['off'],
        'space-before-keywords': ['off'],
        'space-in-brackets': ['off'],
        'space-in-parens': ['off'],
        'space-infix-ops': ['off'],
        'space-return-throw-case': ['off'],
        'space-unary-ops': ['off'],
        'space-unary-word-ops': ['off'],
        'switch-colon-spacing': ['off'],
        'template-curly-spacing': ['off'],
        'template-tag-spacing': ['off'],
        'unicode-bom': ['off'],
        'wrap-iife': ['off'],
        'wrap-regex': ['off'],
        'yield-star-spacing': ['off'],
        'indent-legacy': ['off'],
        'no-spaced-func': ['off'],
        '@typescript-eslint/restrict-template-expressions': [
            'error',
            { allowNullish: true },
        ],
        '@typescript-eslint/await-thenable': ['error'],
        '@typescript-eslint/no-for-in-array': ['error'],
        '@typescript-eslint/no-misused-promises': ['error'],
        '@typescript-eslint/no-unnecessary-type-assertion': ['error'],
        '@typescript-eslint/prefer-includes': ['error'],
        '@typescript-eslint/prefer-regexp-exec': ['error'],
        '@typescript-eslint/prefer-string-starts-ends-with': ['error'],
        'require-await': ['off'],
        '@typescript-eslint/require-await': ['error'],
        'no-var': ['error'],
        'prefer-const': ['error'],
        'prefer-rest-params': ['error'],
        'prefer-spread': ['error'],
        '@typescript-eslint/adjacent-overload-signatures': ['error'],
        '@typescript-eslint/consistent-type-assertions': ['error'],
        '@typescript-eslint/explicit-function-return-type': ['off'],
        '@typescript-eslint/naming-convention': [
            'error',
            {
                selector: [
                    'variable',
                    'function',
                    'classProperty',
                    'classMethod',
                ],
                format: ['camelCase'],
                leadingUnderscore: 'forbid',
                trailingUnderscore: 'forbid',
            },
            {
                selector: 'interface',
                format: ['PascalCase'],
                custom: {
                    regex: '^I[A-Z]',
                    match: false,
                },
            },
            {
                selector: ['typeParameter'],
                format: ['UPPER_CASE'],
            },
        ],
        'no-array-constructor': ['off'],
        '@typescript-eslint/no-array-constructor': ['error'],
        'no-empty-function': ['off'],
        '@typescript-eslint/no-empty-function': ['error'],
        '@typescript-eslint/no-empty-interface': ['error'],
        '@typescript-eslint/no-inferrable-types': ['error'],
        '@typescript-eslint/no-misused-new': ['error'],
        '@typescript-eslint/no-namespace': ['error'],
        '@typescript-eslint/no-non-null-assertion': ['warn'],
        '@typescript-eslint/no-this-alias': ['error'],
        'no-unused-vars': ['off'],
        '@typescript-eslint/no-unused-vars': [
            'error',
            { argsIgnorePattern: '^_' },
        ],
        'no-use-before-define': ['off'],
        '@typescript-eslint/prefer-namespace-keyword': ['error'],

        'unicorn/better-regex': 'error',
        'unicorn/catch-error-name': 'error',
        'unicorn/consistent-destructuring': 'error',
        'unicorn/consistent-function-scoping': 'error',
        'unicorn/custom-error-definition': 'off',
        'unicorn/empty-brace-spaces': 'error',
        'unicorn/error-message': 'error',
        'unicorn/escape-case': 'error',
        'unicorn/expiring-todo-comments': 'error',
        'unicorn/explicit-length-check': 'error',
        'unicorn/filename-case': [
            'error',
            {
                cases: {
                    camelCase: false,
                    pascalCase: false,
                },
            },
        ],
        'unicorn/import-index': 'off',
        'unicorn/import-style': 'error',
        'unicorn/new-for-builtins': 'error',
        'unicorn/no-abusive-eslint-disable': 'error',
        'unicorn/no-array-callback-reference': 'off',
        'unicorn/no-array-for-each': 'off',
        'unicorn/no-array-method-this-argument': 'error',
        'unicorn/no-array-push-push': 'error',
        'unicorn/no-array-reduce': 'error',
        'unicorn/no-await-expression-member': 'error',
        'unicorn/no-console-spaces': 'error',
        'unicorn/no-document-cookie': 'error',
        'unicorn/no-empty-file': 'error',
        'unicorn/no-for-loop': 'error',
        'unicorn/no-hex-escape': 'error',
        'unicorn/no-instanceof-array': 'error',
        'unicorn/no-invalid-remove-event-listener': 'error',
        'unicorn/no-keyword-prefix': 'off',
        'unicorn/no-lonely-if': 'error',
        'no-nested-ternary': 'off',
        'unicorn/no-nested-ternary': 'error',
        'unicorn/no-new-array': 'error',
        'unicorn/no-new-buffer': 'error',
        'unicorn/no-null': 'off',
        'unicorn/no-object-as-default-parameter': 'error',
        'unicorn/no-process-exit': 'error',
        'unicorn/no-static-only-class': 'error',
        'unicorn/no-thenable': 'error',
        'unicorn/no-this-assignment': 'error',
        'unicorn/no-unreadable-array-destructuring': 'error',
        'unicorn/no-unsafe-regex': 'off',
        'unicorn/no-unused-properties': 'off',
        'unicorn/no-useless-fallback-in-spread': 'error',
        'unicorn/no-useless-length-check': 'error',
        'unicorn/no-useless-promise-resolve-reject': 'error',
        'unicorn/no-useless-spread': 'error',
        'unicorn/no-useless-undefined': ['error', { checkArguments: false }],
        'unicorn/no-zero-fractions': 'error',
        'unicorn/number-literal-case': 'error',
        'unicorn/numeric-separators-style': 'error',
        'unicorn/prefer-add-event-listener': 'error',
        'unicorn/prefer-array-find': 'error',
        'unicorn/prefer-array-flat': 'error',
        'unicorn/prefer-array-flat-map': 'error',
        'unicorn/prefer-array-index-of': 'error',
        'unicorn/prefer-array-some': 'error',
        'unicorn/prefer-at': 'off',
        'unicorn/prefer-code-point': 'error',
        'unicorn/prefer-date-now': 'error',
        'unicorn/prefer-default-parameters': 'error',
        'unicorn/prefer-dom-node-append': 'error',
        'unicorn/prefer-dom-node-dataset': 'error',
        'unicorn/prefer-dom-node-remove': 'error',
        'unicorn/prefer-dom-node-text-content': 'error',
        'unicorn/prefer-export-from': 'error',
        'unicorn/prefer-includes': 'error',
        'unicorn/prefer-json-parse-buffer': 'error',
        'unicorn/prefer-keyboard-event-key': 'error',
        'unicorn/prefer-math-trunc': 'error',
        'unicorn/prefer-modern-dom-apis': 'error',
        'unicorn/prefer-module': 'error',
        'unicorn/prefer-negative-index': 'error',
        'unicorn/prefer-node-protocol': 'off',
        'unicorn/prefer-number-properties': 'error',
        'unicorn/prefer-object-from-entries': 'error',
        'unicorn/prefer-optional-catch-binding': 'error',
        'unicorn/prefer-prototype-methods': 'error',
        'unicorn/prefer-query-selector': 'error',
        'unicorn/prefer-reflect-apply': 'error',
        'unicorn/prefer-regexp-test': 'error',
        'unicorn/prefer-set-has': 'error',
        'unicorn/prefer-spread': 'error',
        'unicorn/prefer-string-replace-all': 'off',
        'unicorn/prefer-string-slice': 'error',
        'unicorn/prefer-string-starts-ends-with': 'error',
        'unicorn/prefer-string-trim-start-end': 'error',
        'unicorn/prefer-switch': 'error',
        'unicorn/prefer-ternary': 'error',
        'unicorn/prefer-top-level-await': 'off',
        'unicorn/prefer-type-error': 'error',
        'unicorn/prevent-abbreviations': 'off',
        'unicorn/relative-url-style': 'error',
        'unicorn/require-array-join-separator': 'error',
        'unicorn/require-number-to-fixed-digits-argument': 'error',
        'unicorn/require-post-message-target-origin': 'off',
        'unicorn/string-content': 'off',
        'unicorn/template-indent': 'warn',
        'unicorn/template-indent': ['error', { indent: 4 }],
        'unicorn/throw-new-error': 'error',
    },
    overrides: [
        {
            files: ['*.test.ts'],
            rules: {
                'no-undef': 'off',
                'max-len': 'off',
                'unicorn/no-useless-promise-resolve-reject': 'off',
            },
        },
    ],
    settings: {},
}
